A. SYSTEM REQUIREMENTS:
   =================================================================================================

1. A working PowerShell v3 installation configured to run scripts. The full
   Windows Management Framework is recommended.

   https://www.microsoft.com/en-us/download/details.aspx?id=34595

   From a PowerShell console lauched with administrative privileges, run:

     PS C:\> Set-ExecutionPolicy RemoteSigned

2. Facebook PowerShell Module:

   http://facebookpsmodule.codeplex.com/


B. INITIAL CONFIGURATION STEPS:
   =================================================================================================

1. Create an installation folder and decompress the SMSF package there.

   NOTE: We are going to use/assume 'C:\SMSF' in the examples below.

2. Go to folders '<InstallDir>' and '<InstallDir>\profiles\master'. Remove the '.master' extension
   on those files that happen to have it. Edit them and personalized its contents accordingly to
   your particular needs.

3. Launch the the Social Media Scripting Console (SMSC):

   PS C:\SMSF> .\SMSC.ps1

4. Setup up your Twitter Credentials:

   Step 1: Register SMSF as one of your Twitter applications at https://dev.twitter.com/apps

   Step 2: Edit the file '<InstallDir>\profiles\master\connections.ps1' and update each setting with
     under the Twitter branch with the correct values. Namely, 'ConsumerKey', 'ConsumerSecret',
     'AccessToken' and 'AccessTokenSecret'.

5. Setup up your LinkedIn Credentials:

   Step 1: Register SMSF as one of your LinkedIn applications at https://www.linkedin.com/secure/developer

   Step 2: Edit the file '<InstallDir>\profiles\master\connections.ps1' and update each setting with
     under the LinkedIn branch with the correct values. Namely, 'ApiKey', 'SecretKey', 'UserToken',
     and 'UserSecret'.

   Step 3: From the Social Media Scripting Console (SMSC), run the following command:

     >> SMSC [1] > New-LINConnection

   Step 4: Edit the file '<InstallDir>\profiles\master\connections.ps1' and update each setting with
     under the LinkedIn branch with the correct values. Namely, 'AccessToken'.

   Step 5: From the Social Media Scripting Console (SMSC), run the following commands:

     >> SMSC [1] > Get-RawLINCompanyIdByDomain -domain "<YourEmailDomainName>" -NamePattern "<YourCompanyName>"
     >> SMSC [1] > Get-RawLINGroupIdByName -name "<YourGroupName>"

   Step 6: Edit the file '<InstallDir>\profiles\master\connections.ps1' and update each setting with
     under the LinkedIn branch with the correct values. Namely, 'DefaultCompanyId', 'DefaultCompanyName',
     'DefaultGroupId', and 'DefaultGroupName'.

   Step 7: Edit the file '<InstallDir>\profiles\master\connections.ps1' and update the 'RedirectUri'
     property under the LinkedIn branch with the correct value for your case.

6. Set up your Facebook Credentials

   Step 1: From the Social Media Scripting Console (SMSC), run the following command:

     >> SMSC [1] > New-FBConnectionDetails

     NOTE: On the credentials window, select the 'Keep me logged in' option!

   Step 2: Edit the file '<InstallDir>\profiles\master\connections.ps1' and update each setting with
     under the Facebook branch with the correct values. Namely, 'DefaultPageId', 'DefaultPageName'
     and 'AccessToken'.

7. Setup up your Bitly.com Credentials:

   Step 1: From the Social Media Scripting Console (SMSC), run the following command:

     >> SMSC [1] > Get-BLOAuthToken -UserName <YourUserName> -Password <YourPassword>

   Step 2: Edit the file '<InstallDir>\profiles\master\connections.ps1' and update each setting with
     under the BitLy branch with the correct values. Namely, 'UserName' and 'AccessToken'.

   Step 3: Edit the file '<InstallDir>\profiles\master\connections.ps1' and update the 'RedirectUri'
     property under the Bitly branch with the correct value for your case.

8. Set up your Feeds Data Sources

   Step 1: Create/Build an OPML file with all the RSS feeds that you want to process and place the
     file on the followin location. '<InstallDir>\profiles\master'. The default file name for the
     OPML file is 'FeedSubscriptions.xml', but you can use the one of your choosing.

   Step 2: Edit the file '<InstallDir>\profiles\master\connections.ps1' and update the
     'DefaultFeedSource' value accordingly.

9. Review & Edit Data Set mapping rules contained in '<InstallDir>\profiles\master\update-rules.ps1'
   according to your particular needs.

10. Review & Edit settings according to your particular needs for options stored on the following
    locatons:

   - '<InstallDir>\settings.ps1'
   - '<InstallDir>\profiles\master\settings.ps1'
   - '<InstallDir>\profiles\<ProfileName>\settings.ps1'

   Usually, the settings that you might, eventually, interested on customizing would be:
   'DefaultProfileName', 'ForcedSessionId', 'DefaultSessionStore' and 'HashingMasterKey'. However,
   default values are fine to begin with.

11. Reload the Social Media Scripting Console (SMSC) so that the new settings get loaded:

   >> SMSC [1] > exit
   PS C:\SMSF> .\SMSC.ps1


C. OPENING THE SOCIAL MEDIA SCRIPTING CONSOLE:
   =================================================================================================

   If you have installed the framework in 'C:\SMSF', run the following commands from a PowerShell
   console:

     PS C:\> cd SMSF
     PS C:\SMSF> .\SMSC.ps1


D. SECURITY CONSIDERATIONS:
   =================================================================================================

There are certain files and folders that should be protected from unauthorized access because they
contain or might contain sensitive information. Those are located under the following paths:

  - '<InstallDir>\profiles\master'
  - '<InstallDir>\profiles\<ProfileName>'

By sensitive information we mean:

  - Access credentials.
  - Log files that might leak, eventually, confidential information.
  - Cached objects containing personal information coming from Digital Media.
  - Data sets containing personal information coming from Digital Media.

General Windows Security Hardening techniques apply depending, of course, on your particular case.
Anyway, and assuming that your Digital Identity is managed appropriately from a Security stand point,
there are some easy and effective security measures that you can try:

  1. Set up ACLs in NTFS accordingly.

  2. Set up NTFS auditing accordingly.

  3. Set up Monitoring and Alerts on the Windows Security Events that correspond to your auditing
     settings.

  4. Consider using file system or drive encryption technologies when appropriate.

  5. When deleting files containing sensitive information, use a Secure File Wiping utility.

NOTE: Please, pay special attention to Security measures when deploying SMSF on a Virtual Machine
hosted on a Cloud Service.